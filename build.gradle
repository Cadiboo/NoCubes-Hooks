buildscript {
	repositories {
		jcenter()
		maven { url = "http://files.minecraftforge.net/maven" }
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.12.2-0.1.0"
group = "io.github.cadiboo.renderchunkrebuildchunkhooks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "RenderChunk rebuildChunk Hooks"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
	sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {

	version = "1.12.2-14.23.5.2795" // Latest Forge-Optifine(HD_U_E3) 1.12.2 Compatibility
	// version = "1.12.2-14.23.5.2768" // Latest Stable

	runDir = "run"
	
	// the mappings can be changed at any time, and must be in the following format.
	// snapshot_YYYYMMDD	snapshot are built nightly.
	// stable_#				stables are built at the discretion of the MCP team.
	// Use non-default mappings at your own risk. they may not always work.
	// simply re-run your setup task after changing the mappings to update your workspace.

	// mappings = "snapshot_20180814" // Latest 1.12.x Mappings
	mappings = "stable_39" // Latest stable 1.12.x Mappings
	// mappings = "snapshot_20171003" // Default mappings for 1.12.x

	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	useDepAts = true

	replace "@VERSION@", project.version
	replaceIn "io/github/cadiboo/renderchunkrebuildchunkhooks/mod/RenderChunkRebuildChunkHooksDummyModContainer.java"

}

dependencies {

	// you may put jars on which you depend on in ./libs
	// or you may define them like so..
	//compile "some.group:artifact:version:classifier"
	//compile "some.group:artifact:version"

	// real examples
	//compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
	//compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

	// the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
	//provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

	// the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
	// except that these dependencies get remapped to your current MCP mappings
	//deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
	//deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

	// for more info...
	// http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
	// http://www.gradle.org/docs/current/userguide/dependency_management.html

}

jar {

	sourceSets {
		main {
			java {
				exclude '**/debug/**'
			}
		}
	}

	manifest {
		attributes 'FMLAT': 'renderchunkrebuildchunkhooks_at.cfg'
		attributes 'FMLCorePlugin': 'io.github.cadiboo.renderchunkrebuildchunkhooks.core.RenderChunkRebuildChunkHooksLoadingPlugin'
		attributes 'FMLCorePluginContainsMod': 'true'
	}
}


processResources {

	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
				
		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}
		
	// copy everything else except the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}

	//move our Access Transformer to META-INF
	rename '(.+_at.cfg)', 'META-INF/$1'
	
}
